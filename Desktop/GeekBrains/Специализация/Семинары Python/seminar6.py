# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), которых нет во втором массиве.
# Пользователь вводит число N - количество элементов в первом массиве, затем N чисел - элементы массива.
# Затем число M - количество элементов во втором массиве. Затем элементы второго массива
# from random import randint

# n = int(input("Введите количество элемнтов N: "))
# m = int(input("Введите количество элемнтов M: "))

# list_1 = [randint(1, 20) for _ in range(n)]
# list_2 = [randint(1, 20) for _ in range(m)]
# list_3 = []

# print(list_1)
# print(list_2)

# for i in list_1:
#     if i not in list_2:
#         list_3.append(i)

# print(list_3)

# Дан массив, состоящий из целых чисел.
# Напишите программу, которая в данном массиве определит количество элементов,
# у которых два соседних и, при этом, оба соседних элемента меньше данного.
# Сначала вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.

# from random import randint

# n = 10
# list_1 = [randint(1, 20) for _ in range(n)]
# count = 0

# print(list_1)

# for i in range(1, n - 1):
#     if list_1[i - 1] < list_1[i] and list_1[i + 1] < list_1[i]:
#         count += 1

# print(count)

# Дан список чисел. Посчитайте, сколько в нем пар элементов,
# равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. 
# Вводится список чисел. Все числа списка находятся на разных строках.

# from random import randint

# n = 10
# print(lst := [randint(1, 10) for _ in range(n)])

# list_2 = []
# count = 0
# list_2.append(lst.count(item) for item in lst if lst.count(item) > 1 and item not in list_2)
# print(list_2)
# for item in lst:
#     if lst.count(item) > 1 and item not in list_2:
#         list_2.append(item)

# print(len(list_2))

# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n)
# равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных чисел,
# каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 105.
# Программа должна вывести  все пары дружественных чисел, каждое из которых не превосходит k.
# Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).

# k = 1000


# n = 220
# m = 284

# def friends(n, m):
#     first = []
#     second = []
#     for i in range(1, n//2):
#         if n % i == 0:
#             first.append(i)
#     for j in range(1, m//2):
#         if m % j == 0:
#             second.append(j)

#     if sum(first) == m and sum(second) == n:
#         return True
#     else:
#         return False


